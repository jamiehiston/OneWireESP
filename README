This is a port of the OneWire.h library used in Arduino projects, for the ESP-IDF
It supports 2 buses at the moment but you can add multiple yourself using the same
principal. I've deliberately named variables as DIRECT_READ1 and DIRECT_READ2
(for example) to make it easier to know what needs duplicating and renumbering for
multiple buses. Obviously 1 is associated with bus 1 and 2 is bus 2.

This library will be super helpful to the rare people who don't want to use arduino
as a component, but want to use arduino projects and examples, while sticking solely
to the ESP-IDF. There's no drop-in port of this library that I know of, but its great
if you want an arduino-less arduino project.

======================================
== TO DEFINE THE PIN/S FOR YOUR BUS ==
======================================
Go into the OneWireESP.h file and change gpio_num_9 and/or gpio_num_11 to whatever pins
you're using. The ESP framework is different to Arduino in that it's not a straight
number definition, and you need to use this enum format i.e. gpio_num_1 for pin 1, etc.

In main.cpp, declare the bus as you normally would. Use OneWire ow1(OW1_PIN); for example
this would mean your bus name (configurable by you) is named ow1. OW1_PIN is the important
bit and can't change.
